# BEGIN STUDENT PROFILE AND SETTINGS SCHEMA DEFINITIONS

type NCEStudentProfile 
  @model 
 {
  id: ID!
  name: String!
  email: AWSEmail!
  birthdate: AWSDate!
  status: StudentStatus!
}

type NCEUserSettings 
  @model 
 {
  id: ID!
  notificationsEnabled: Boolean!
  darkModeEnabled: Boolean!
  language: String!
  isAdmin: Boolean!
}

# BEGIN NOTIFICATION SCHEMA DEFINITIONS

type BroadcastNotification 
@model 
{
  id: ID!
  targetStudent: String
  title: String!
  message: String!
  createdAt: AWSDateTime!
  type: NotificationType!
  redirect: String
}

type UserNotificationRead 
@model 
{
  id: ID!
  notificationID: ID!
  readAt: AWSDateTime
}

enum NotificationType {
  MESSAGE
  ALERT
  REMINDER
}

enum StudentStatus {
  ACTIVE
  INACTIVE
}
# BEGIN COURSE SCHEMA DEFINITIONS

type Course 
@model
{
  id: ID!
  title: String!
  description: String
  subject: CourseSubject!
  difficulty: String
  creator: ID! @index
  modules: [Module] @hasMany
}

type Module 
@model 
{
  id: ID!
  title: String!
  description: String
  courseID: ID! @index(name: "byCourse", sortKeyFields: ["id"])
  course: Course! @belongsTo(fields: ["courseID"])
  lessons: [Lesson] @hasMany
}

type Lesson 
@model 
{
  id: ID!
  title: String!
  content: AWSJSON # Use AWSJSON for complex content structures
  videoURL: String
  moduleID: ID! @index(name: "byModule", sortKeyFields: ["id"])
  module: Module! @belongsTo(fields: ["moduleID"])
  quizzes: [Quiz] @hasMany
  exercises: [Exercise] @hasMany # STEM-specific interactive exercises
}

type Exercise 
@model 
{
  id: ID!
  question: String!
  solution: String
  lessonID: ID! @index(name: "byLesson", sortKeyFields: ["id"])
  lesson: Lesson! @belongsTo(fields: ["lessonID"])
  exerciseType: ExerciseType!
  data: AWSJSON # For dynamic content or problem parameters
}

type Quiz 
@model 
{
  id: ID!
  title: String!
  lessonID: ID! @index(name: "byLesson", sortKeyFields: ["id"])
  lesson: Lesson! @belongsTo(fields: ["lessonID"])
  questions: [Question] @hasMany
}

type Question 
@model 
{
  id: ID!
  text: String!
  options: AWSJSON # Multiple-choice options
  correctAnswer: String!
  quizID: ID! @index(name: "byQuiz", sortKeyFields: ["id"])
  quiz: Quiz! @belongsTo(fields: ["quizID"])
}

type Enrollment 
@model 
{
  id: ID!
  userID: ID!
  courseID: ID!
  progress: Float
  completed: Boolean
  achievements: [String]
}

enum CourseSubject {
  MATH
  COMPUTER_SCIENCE
}

enum ExerciseType {
  CODING
  PROBLEM_SOLVING
}
